#!/usr/bin/env bash

BASEDIR=$(realpath $(dirname "$0")/..)

TARGET="$1"
OS=$([ -x "/usr/bin/uname" ] && uname | tr '[:upper:]' '[:lower:]' || "windows")
COMMAND="compile"

if $(echo "$1" | grep -E "compile|pkg|nexe|deno" >/dev/null 2>&1); then
    COMMAND="$1"
    OS="$2"
    TARGET="$3"
fi

FILE_DEST="dist/backend.js"
# TypeScript compiling
$BASEDIR/node_modules/.bin/tsc --project tsconfig.backend.json
if [ ! -f dist/plugin.json ]; then
    cp -fv src/plugin.json dist/plugin.json
fi
EXEC=$(grep "executable" dist/plugin.json | sed -E 's/"executable":[ \t]+"(.*)",/\1/' | tr -d ' ' | tr -d '\n')
ARCH="amd64"
FILENAME="dist/${EXEC}_${OS}_${ARCH}"

cat <<'EOF' > "${FILE_DEST}"
#!/usr/bin/env node
"use strict";
const app = require("./backend/index");
app.run();
EOF

case "$COMMAND" in
  "compile")
    # put out a script that runs the backend
    chmod 755 "${FILE_DEST}"
    mv "${FILE_DEST}" "${FILENAME}"
    ;;

  "deno")
    [ -f "${FILENAME}" ] && /bin/rm -f "${FILENAME}"
    deno compile -A --unstable -o "${FILENAME}" --target "${TARGET}" -c ./tsconfig.backend.json backend/index.ts
    ;;

  "pkg")
    $BASEDIR/node_modules/.bin/pkg "${FILE_DEST}" -t "${TARGET}" -o "${FILENAME}"
    ;;

  "nexe")
    $BASEDIR/node_modules/.bin/nexe -i "${FILE_DEST}" -t "${TARGET}" -o "${FILENAME}" --build --verbose -c "-mmacosx-version-min=10.13 --openssl-no-asm"
    ;;

  *)
    # Default is compile
    echo "$COMMAND is not a recognized comand" > /dev/stderr
    exit -1
    ;;
esac